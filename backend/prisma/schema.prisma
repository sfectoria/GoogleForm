// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String
  age       Int?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  documents Document[] @relation("CreatedDocuments")
  Document  Document[]
}

model Document {
  id                  String     @id @default(uuid())
  documentName        String
  documentDescription String
  createdByUserID     String
  createdOn           DateTime   @default(now())
  updatedOn           DateTime   @default(now())
  questions           Question[]
  user                User       @relation("CreatedDocuments", fields: [createdByUserID], references: [id])

  User      User?       @relation(fields: [userId], references: [id])
  userId    String?
  Responses Responses[]
}

model Question {
  id           String   @id @default(uuid())
  question     String?
  questionType String?
  open         Boolean?
  required     Boolean?
  answer       Boolean?
  points       Int?
  options      Option[]
  document     Document @relation(fields: [documentId], references: [id])
  documentId   String
}

model Option {
  id         String   @id @default(uuid())
  option     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

model Responses {
  id          String   @id @default(uuid())
  document    Document @relation(fields: [documentId], references: [id])
  documentId  String
  submittedOn DateTime @default(now())
  answers     Json
}
